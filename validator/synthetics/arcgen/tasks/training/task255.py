# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""Generator."""

from validator.synthetics.arcgen import common


def generate(colors=None, size=30):
  """Returns input and output grids according to the given parameters.

  Args:
    colors: a list of digits representing the colors to be used
    size: the width and height of the (square) grid
  """
  if colors is None:
    color = common.random_color(exclude=[common.green()])
    bitmap = common.grid(size, size)
    for r, c in common.random_pixels(size, size, 0.5):
      bitmap[r][c] = color
    rows, cols, wides, talls = [], [], [], []
    # Add the artery
    rows.append(-1 if common.randint(0, 3) else 4)
    cols.append(common.randint(5, 10))
    wides.append(common.randint(6, 12))
    talls.append(size + 2)
    # Maybe add a big vein on the left.
    if common.randint(0, 1):
      rows.append(rows[0] + common.randint(6, 12))
      cols.append(-1)
      wides.append(cols[0] + wides[0])
      talls.append(common.randint(10, 14))
    # Or, maybe add a couple small veins on the left.
    elif common.randint(0, 1):
      rows.append(rows[0] + common.randint(6, 9))
      cols.append(-1)
      wides.append(cols[0] + wides[0])
      talls.append(common.randint(3, 4))
      rows.append(rows[1] + common.randint(6, 9))
      cols.append(-1)
      wides.append(cols[0] + wides[0])
      talls.append(common.randint(3, 4))
    # On the right, maybe add a vein up high.
    if common.randint(0, 1):
      rows.append(rows[0] + common.randint(6, 9))
      cols.append(cols[0] + wides[0] - 2)
      wides.append(size)
      talls.append(common.randint(3, 4))
    # And maybe another much lower?
    if common.randint(0, 1):
      rows.append(rows[0] + common.randint(18, 24))
      cols.append(cols[0] + wides[0] - 2)
      wides.append(size)
      talls.append(common.randint(3, 4))
    # For each box, remove its outline.
    for row, col, wide, tall in zip(rows, cols, wides, talls):
      for r in range(row, row + tall):
        for c in range(col, col + wide):
          common.draw(bitmap, r, c, common.black())
    for row, col, wide, tall in zip(rows, cols, wides, talls):
      for r in range(row + 1, row + tall - 1):
        for c in range(col + 1, col + wide - 1):
          common.draw(bitmap, r, c, common.green())
    # Sometimes we transpose:
    if common.randint(0, 1): bitmap = common.transpose(bitmap)
    # Sometimes we flip:
    if common.randint(0, 1): bitmap = bitmap[::-1]
    colors = []
    for row in bitmap:
      colors.extend(row)

  grid, output = common.grids(size, size)
  for r in range(size):
    for c in range(size):
      color = colors[r * size + c]
      grid[r][c] = color if color != common.green() else common.black()
      output[r][c] = color
  return {"input": grid, "output": output}


def validate():
  """Validates the generator."""
  train = [
      generate(
          colors=[8, 8, 0, 8, 0, 8, 0, 8, 8, 8, 8, 8, 0, 8, 8, 8, 0, 8, 0, 0, 8,
                  0, 8, 0, 0, 0, 8, 8, 0, 8, 0, 0, 0, 8, 8, 8, 8, 0, 0, 8, 0, 8,
                  0, 0, 8, 8, 0, 0, 8, 0, 0, 0, 0, 0, 8, 8, 8, 8, 0, 8, 8, 0, 0,
                  0, 8, 8, 0, 0, 8, 0, 8, 8, 0, 8, 8, 0, 8, 0, 8, 0, 8, 8, 8, 8,
                  0, 0, 8, 0, 0, 0, 0, 8, 8, 0, 0, 0, 0, 8, 8, 0, 0, 0, 0, 8, 8,
                  0, 8, 8, 0, 0, 0, 8, 8, 0, 8, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 0,
                  0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 8, 8, 8, 0, 0, 8, 0, 8, 8,
                  0, 0, 8, 0, 8, 0, 0, 0, 8, 8, 8, 0, 3, 3, 3, 3, 3, 3, 3, 0, 0,
                  8, 8, 8, 8, 0, 8, 0, 8, 0, 0, 0, 8, 0, 8, 8, 8, 8, 0, 0, 8, 0,
                  3, 3, 3, 3, 3, 3, 3, 0, 8, 8, 8, 0, 0, 0, 0, 0, 8, 0, 8, 8, 8,
                  0, 8, 8, 8, 8, 0, 0, 8, 0, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 8, 0,
                  8, 0, 8, 8, 8, 0, 0, 8, 8, 8, 0, 8, 8, 0, 8, 8, 8, 0, 3, 3, 3,
                  3, 3, 3, 3, 0, 8, 0, 0, 0, 8, 0, 0, 8, 0, 0, 8, 0, 8, 8, 8, 8,
                  0, 8, 8, 0, 8, 0, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 8, 0, 8, 8, 0, 0, 8, 8, 0, 3, 3, 3, 3, 3, 3,
                  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 8, 8, 0, 0, 0,
                  0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                  3, 3, 3, 0, 8, 0, 0, 8, 0, 0, 8, 0, 3, 3, 3, 3, 3, 3, 3, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 8, 8, 8, 8, 0, 0, 0, 0,
                  3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 8, 0, 8, 8, 0, 8, 8, 0, 8,
                  8, 0, 8, 8, 0, 0, 8, 8, 0, 3, 3, 3, 3, 3, 3, 3, 0, 8, 8, 0, 8,
                  0, 0, 0, 8, 0, 0, 0, 8, 8, 8, 0, 8, 0, 0, 8, 8, 0, 0, 3, 3, 3,
                  3, 3, 3, 3, 0, 0, 0, 8, 0, 8, 8, 0, 0, 0, 8, 0, 8, 8, 0, 0, 8,
                  8, 8, 8, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 0, 8, 8, 0, 0, 0, 8, 8,
                  0, 8, 8, 0, 0, 8, 8, 0, 8, 0, 0, 8, 8, 8, 0, 3, 3, 3, 3, 3, 3,
                  3, 0, 8, 8, 8, 8, 0, 8, 8, 0, 0, 0, 8, 8, 0, 8, 0, 8, 8, 0, 8,
                  0, 8, 0, 3, 3, 3, 3, 3, 3, 3, 0, 0, 8, 8, 8, 0, 8, 0, 8, 0, 8,
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 0, 0,
                  8, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                  3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 8, 0, 8, 0,
                  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 8, 0, 0, 0,
                  0, 8, 0, 8, 8, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3,
                  3, 3, 3, 3, 0, 0, 8, 0, 0, 0, 0, 8, 0, 8, 0, 8, 8, 8, 8, 8, 0,
                  0, 8, 8, 0, 8, 0, 3, 3, 3, 3, 3, 3, 3, 0, 8, 8, 8, 0, 8, 0, 0,
                  0, 0, 8, 8, 8, 8, 0, 8, 8, 8, 8, 0, 0, 8, 0, 3, 3, 3, 3, 3, 3,
                  3, 0, 8, 0, 8, 0, 8, 0, 8, 8, 0, 0, 0, 8, 8, 0, 8, 8, 0, 8, 8,
                  8, 0, 0, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 8, 0, 8, 0,
                  8, 0, 8, 8, 0, 8, 8, 8, 0, 8, 8, 0, 3, 3, 3, 3, 3, 3, 3, 0, 0,
                  8, 8, 8, 0, 8, 0, 8, 8, 0, 0, 0, 8, 8, 0, 8, 0, 8, 0, 8, 0, 0,
                  3, 3, 3, 3, 3, 3, 3, 0, 8, 0, 8, 8, 0, 8, 8, 0, 8, 0, 0, 8, 0,
                  0, 8, 8, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 0, 0, 8, 0, 0,
                  8, 8, 0, 8, 8, 8, 0, 0, 0, 8, 8, 8, 0, 8, 0, 0, 8, 0, 3, 3, 3,
                  3, 3, 3, 3, 0, 8, 8, 0, 8, 0, 8, 8, 0, 8, 0, 8, 8, 0]),
      generate(
          colors=[1, 1, 1, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 0, 1, 0, 1, 0, 0, 0, 1,
                  1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 3, 3, 3, 3, 3, 3,
                  3, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1,
                  1, 0, 0, 3, 3, 3, 3, 3, 3, 3, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1,
                  0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 3, 3, 3, 3, 3, 3, 3, 0, 1,
                  1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0,
                  3, 3, 3, 3, 3, 3, 3, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1,
                  0, 0, 1, 0, 0, 1, 1, 1, 0, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 1, 0,
                  0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 3, 3, 3,
                  3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  1, 1, 1, 0, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                  3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 1, 0, 1, 0, 3, 3, 3, 3, 3, 3,
                  3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1,
                  1, 1, 0, 3, 3, 3, 3, 3, 3, 3, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0,
                  0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 3, 3, 3, 3, 3, 3, 3, 0, 0,
                  0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0,
                  3, 3, 3, 3, 3, 3, 3, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,
                  0, 0, 1, 1, 1, 1, 0, 1, 0, 3, 3, 3, 3, 3, 3, 3, 0, 1, 0, 1, 0,
                  0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 3, 3, 3,
                  3, 3, 3, 3, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1,
                  0, 1, 1, 0, 1, 0, 3, 3, 3, 3, 3, 3, 3, 0, 1, 1, 0, 0, 1, 0, 1,
                  1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 3, 3, 3, 3, 3, 3,
                  3, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1,
                  0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 0, 1, 0, 0, 0,
                  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                  3, 3, 3, 1, 1, 0, 1, 1, 0, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 3, 3, 3,
                  3, 3, 3, 3, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1,
                  0, 0, 1, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 0, 1, 1, 0, 0, 0, 0, 0,
                  1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3,
                  3, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0,
                  1, 0, 0, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0,
                  0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 3, 3, 3, 3, 3, 3, 3, 0, 0,
                  0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0,
                  3, 3, 3, 3, 3, 3, 3, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1,
                  1, 0, 0, 0, 0, 1, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 0, 1, 1, 0, 0,
                  0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 3, 3, 3,
                  3, 3, 3, 3, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1,
                  1, 0, 1, 0, 1, 0, 3, 3, 3, 3, 3, 3, 3, 0, 1, 0, 0, 0, 0, 0, 0,
                  1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 3, 3, 3, 3, 3, 3,
                  3, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0]),
      generate(
          colors=[0, 2, 0, 2, 2, 2, 2, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 2, 0, 0, 0,
                  0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 3, 3, 3, 3,
                  3, 3, 3, 3, 0, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 2, 2, 0, 0, 2, 0,
                  0, 0, 2, 2, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 2, 0, 2, 0, 0, 0, 0,
                  2, 0, 2, 0, 2, 0, 0, 0, 0, 0, 2, 0, 2, 0, 3, 3, 3, 3, 3, 3, 3,
                  3, 0, 2, 2, 0, 0, 2, 2, 0, 2, 2, 0, 0, 0, 0, 0, 2, 0, 0, 2, 2,
                  0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 2, 0, 0, 0, 0, 2, 2, 0, 0,
                  2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 2,
                  2, 2, 0, 0, 2, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 2, 0, 2, 0, 0, 3,
                  3, 3, 3, 3, 3, 3, 3, 0, 2, 2, 0, 2, 0, 0, 2, 2, 2, 0, 0, 0, 0,
                  2, 2, 2, 2, 0, 0, 2, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 2, 0, 0,
                  0, 2, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3,
                  3, 3, 3, 3, 0, 0, 0, 2, 0, 0, 2, 0, 0, 0, 2, 2, 0, 2, 3, 3, 3,
                  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 2, 0, 0, 0, 0, 0, 0,
                  0, 0, 2, 2, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                  3, 0, 0, 0, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 2, 3, 3, 3, 3, 3, 3,
                  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 2, 2, 2, 2, 0, 2, 0, 0,
                  0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0,
                  0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                  3, 3, 3, 3, 3, 3, 3, 0, 2, 0, 0, 0, 0, 0, 2, 2, 0, 2, 0, 0, 2,
                  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 2, 0, 0, 0,
                  0, 2, 0, 0, 2, 0, 0, 2, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                  3, 3, 3, 3, 0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 2, 0, 2, 0, 3, 3, 3,
                  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 2, 0, 2, 2, 0, 0,
                  2, 2, 0, 0, 0, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                  3, 0, 0, 2, 2, 2, 2, 0, 2, 2, 2, 0, 2, 0, 2, 3, 3, 3, 3, 3, 3,
                  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 2,
                  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0,
                  0, 0, 0, 2, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 2, 2, 2, 2, 0, 3,
                  3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 2, 2, 0, 0, 2, 0, 2, 0, 0, 0, 0,
                  0, 0, 2, 0, 0, 2, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0,
                  2, 2, 0, 0, 0, 2, 2, 0, 2, 0, 0, 2, 2, 0, 2, 0, 0, 3, 3, 3, 3,
                  3, 3, 3, 3, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 2, 2, 2, 0, 0, 2, 0,
                  0, 0, 2, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 2, 0, 0, 2, 0, 0,
                  0, 0, 0, 2, 0, 2, 2, 0, 2, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3,
                  3, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 0, 0, 2, 0,
                  0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 2, 2, 0, 0, 2, 0, 0, 2, 2,
                  0, 0, 0, 2, 0, 0, 0, 2, 2, 2, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 2,
                  0, 0, 2, 0, 2, 0, 0, 0, 2, 2, 2, 2, 0, 2, 0, 2, 0, 0, 2, 0, 3,
                  3, 3, 3, 3, 3, 3, 3, 0, 2, 0, 0, 2, 0, 2, 0, 0, 0, 2, 0, 2, 2,
                  2, 0, 2, 2, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 2, 0, 0, 0,
                  2, 2, 0, 0, 0, 2, 0, 2, 0, 2, 0, 0, 2, 2, 0, 0, 0, 3, 3, 3, 3,
                  3, 3, 3, 3, 0, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 0, 2, 2]),
  ]
  test = [
      generate(
          colors=[0, 4, 4, 0, 4, 0, 4, 4, 0, 0, 0, 3, 3, 0, 4, 4, 4, 4, 4, 0, 3,
                  0, 4, 0, 4, 4, 4, 0, 0, 0, 4, 4, 4, 0, 0, 4, 4, 0, 0, 0, 0, 3,
                  3, 0, 0, 4, 4, 0, 4, 0, 3, 0, 0, 0, 0, 4, 4, 0, 4, 4, 0, 0, 0,
                  4, 0, 0, 0, 0, 4, 4, 0, 3, 3, 0, 0, 4, 0, 4, 4, 0, 3, 0, 4, 4,
                  0, 0, 4, 0, 0, 4, 4, 0, 0, 0, 4, 4, 4, 0, 4, 0, 0, 3, 3, 0, 4,
                  0, 0, 0, 4, 0, 3, 0, 0, 0, 0, 0, 4, 0, 0, 4, 4, 0, 4, 4, 4, 0,
                  4, 0, 0, 4, 0, 3, 3, 0, 0, 0, 0, 4, 0, 0, 3, 0, 0, 4, 0, 4, 4,
                  0, 4, 0, 0, 0, 4, 0, 4, 0, 0, 0, 4, 4, 0, 3, 3, 0, 4, 0, 0, 4,
                  0, 0, 3, 0, 0, 4, 0, 0, 0, 0, 0, 0, 4, 0, 4, 4, 0, 0, 4, 0, 0,
                  4, 0, 3, 3, 0, 4, 0, 4, 4, 0, 0, 3, 0, 4, 0, 0, 4, 4, 0, 4, 4,
                  0, 4, 0, 4, 4, 4, 0, 4, 0, 0, 0, 3, 3, 0, 0, 0, 0, 4, 0, 0, 3,
                  0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 4, 0, 0, 0, 4, 4, 4, 0, 0, 3,
                  3, 0, 4, 4, 0, 0, 4, 0, 3, 0, 0, 0, 0, 0, 4, 0, 4, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                  3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3,
                  3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0,
                  0, 0, 0, 0, 4, 0, 4, 0, 3, 3, 0, 0, 4, 0, 0, 4, 0, 0, 0, 4, 0,
                  4, 4, 0, 0, 4, 4, 4, 4, 0, 4, 4, 0, 0, 4, 0, 0, 0, 3, 3, 0, 0,
                  4, 0, 4, 0, 0, 4, 0, 0, 4, 4, 4, 0, 4, 0, 0, 0, 0, 4, 0, 4, 4,
                  4, 0, 4, 0, 0, 3, 3, 0, 0, 0, 0, 4, 0, 0, 0, 0, 4, 4, 4, 4, 4,
                  4, 4, 4, 0, 4, 4, 0, 4, 0, 0, 0, 0, 0, 0, 3, 3, 0, 4, 4, 4, 0,
                  4, 0, 4, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0,
                  4, 0, 3, 3, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 4, 0, 0,
                  4, 0, 4, 0, 0, 0, 4, 0, 0, 0, 0, 3, 3, 0, 0, 0, 4, 4, 0, 0, 0,
                  0, 0, 0, 4, 0, 4, 4, 0, 4, 4, 0, 4, 4, 0, 0, 4, 4, 0, 0, 0, 3,
                  3, 0, 0, 0, 4, 4, 4, 0, 0, 4, 0, 4, 0, 4, 0, 0, 4, 4, 0, 4, 4,
                  4, 4, 0, 4, 0, 0, 0, 0, 3, 3, 0, 4, 0, 4, 4, 0, 4, 0, 0, 0, 4,
                  0, 0, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 4, 4, 0, 4, 0, 3, 3, 0, 4,
                  4, 0, 4, 0, 0, 4, 0, 4, 0, 4, 0, 4, 4, 4, 0, 4, 0, 4, 0, 0, 0,
                  4, 0, 0, 4, 0, 3, 3, 0, 4, 0, 4, 4, 0, 0, 0, 0, 4, 0, 4, 4, 0,
                  4, 0, 4, 0, 4, 0, 4, 0, 0, 0, 0, 0, 4, 0, 3, 3, 0, 4, 0, 4, 0,
                  4, 4, 4, 0, 0, 4, 4, 0, 0, 0, 4, 0, 0, 0, 4, 0, 4, 0, 4, 4, 0,
                  0, 0, 3, 3, 0, 0, 0, 4, 0, 4, 0, 0, 0, 0, 0, 0, 4, 0, 0, 4, 4,
                  4, 0, 0, 0, 0, 0, 4, 4, 4, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 4,
                  0, 4, 0, 4, 4, 4, 0, 4, 4, 0, 0, 0, 4, 4, 4, 4, 4, 4, 0, 0, 3,
                  3, 0, 0, 4, 0, 0, 4, 0, 0, 0, 0, 4, 0, 4, 4, 0, 0, 0]),
  ]
  return {"train": train, "test": test}
